{"ast":null,"code":"import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\";\n\n// Register User\nexport var registerUser = function registerUser(userData, history) {\n  return function (dispatch) {\n    axios.post(\"/api/users/register\", userData).then(function (res) {\n      return history.push(\"/login\");\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};\n\n// Login - get user token\nexport var loginUser = function loginUser(userData) {\n  return function (dispatch) {\n    axios.post(\"/api/users/login\", userData).then(function (res) {\n      // Save to localStorage\n      // Set token to localStorage\n      var token = res.data.token;\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      var decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};\n\n// Set logged in user\nexport var setCurrentUser = function setCurrentUser(decoded) {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\n// User loading\nexport var setUserLoading = function setUserLoading() {\n  return {\n    type: USER_LOADING\n  };\n};\n\n// Log user out\nexport var logoutUser = function logoutUser() {\n  return function (dispatch) {\n    // Remove token from local storage\n    localStorage.removeItem(\"jwtToken\");\n    // Remove auth header for future requests\n    setAuthToken(false);\n    // Set current user to empty object {} which will set isAuthenticated to false\n    dispatch(setCurrentUser({}));\n  };\n};","map":{"version":3,"names":["axios","setAuthToken","jwt_decode","GET_ERRORS","SET_CURRENT_USER","USER_LOADING","registerUser","userData","history","dispatch","post","then","res","push","catch","err","type","payload","response","data","loginUser","token","localStorage","setItem","decoded","setCurrentUser","setUserLoading","logoutUser","removeItem"],"sources":["C:/Users/Saim/Documents/JanWhere/frontend/src/actions/authActions.js"],"sourcesContent":["import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\n\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\";\n\n// Register User\nexport const registerUser = (userData, history) => dispatch => {\n  axios\n    .post(\"/api/users/register\", userData)\n    .then(res => history.push(\"/login\"))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Login - get user token\nexport const loginUser = userData => dispatch => {\n  axios\n    .post(\"/api/users/login\", userData)\n    .then(res => {\n      // Save to localStorage\n\n      // Set token to localStorage\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\n// User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\n\n// Log user out\nexport const logoutUser = () => dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,uBAAuB;AAChD,OAAOC,UAAU,MAAM,YAAY;AAEnC,SAASC,UAAU,EAAEC,gBAAgB,EAAEC,YAAY,QAAQ,SAAS;;AAEpE;AACA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAIC,QAAQ,EAAEC,OAAO;EAAA,OAAK,UAAAC,QAAQ,EAAI;IAC7DT,KAAK,CACFU,IAAI,CAAC,qBAAqB,EAAEH,QAAQ,CAAC,CACrCI,IAAI,CAAC,UAAAC,GAAG;MAAA,OAAIJ,OAAO,CAACK,IAAI,CAAC,QAAQ,CAAC;IAAA,EAAC,CACnCC,KAAK,CAAC,UAAAC,GAAG;MAAA,OACRN,QAAQ,CAAC;QACPO,IAAI,EAAEb,UAAU;QAChBc,OAAO,EAAEF,GAAG,CAACG,QAAQ,CAACC;MACxB,CAAC,CAAC;IAAA,CACJ,CAAC;EACL,CAAC;AAAA;;AAED;AACA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAGb,QAAQ;EAAA,OAAI,UAAAE,QAAQ,EAAI;IAC/CT,KAAK,CACFU,IAAI,CAAC,kBAAkB,EAAEH,QAAQ,CAAC,CAClCI,IAAI,CAAC,UAAAC,GAAG,EAAI;MACX;MAEA;MAAA,IACQS,KAAK,GAAKT,GAAG,CAACO,IAAI,CAAlBE,KAAK;MACbC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEF,KAAK,CAAC;MACvC;MACApB,YAAY,CAACoB,KAAK,CAAC;MACnB;MACA,IAAMG,OAAO,GAAGtB,UAAU,CAACmB,KAAK,CAAC;MACjC;MACAZ,QAAQ,CAACgB,cAAc,CAACD,OAAO,CAAC,CAAC;IACnC,CAAC,CAAC,CACDV,KAAK,CAAC,UAAAC,GAAG;MAAA,OACRN,QAAQ,CAAC;QACPO,IAAI,EAAEb,UAAU;QAChBc,OAAO,EAAEF,GAAG,CAACG,QAAQ,CAACC;MACxB,CAAC,CAAC;IAAA,CACJ,CAAC;EACL,CAAC;AAAA;;AAED;AACA,OAAO,IAAMM,cAAc,GAAG,SAAjBA,cAAcA,CAAGD,OAAO,EAAI;EACvC,OAAO;IACLR,IAAI,EAAEZ,gBAAgB;IACtBa,OAAO,EAAEO;EACX,CAAC;AACH,CAAC;;AAED;AACA,OAAO,IAAME,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;EAClC,OAAO;IACLV,IAAI,EAAEX;EACR,CAAC;AACH,CAAC;;AAED;AACA,OAAO,IAAMsB,UAAU,GAAG,SAAbA,UAAUA,CAAA;EAAA,OAAS,UAAAlB,QAAQ,EAAI;IAC1C;IACAa,YAAY,CAACM,UAAU,CAAC,UAAU,CAAC;IACnC;IACA3B,YAAY,CAAC,KAAK,CAAC;IACnB;IACAQ,QAAQ,CAACgB,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9B,CAAC;AAAA"},"metadata":{},"sourceType":"module"}